name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 1.57.0

    - name: Conan version
      run: echo "${{ steps.conan.outputs.version }}"    

    - name: Installing Conan Dependcies
      working-directory: ${{github.workspace}}
      run: conan install . --install-folder build --build=missing

    - name: Cmake Configuration
      working-directory: ${{github.workspace}}/build
      run: cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Cmake Build Project
      working-directory: ${{github.workspace}}/build
      run: cmake --build .

    - name: Testing Using GTEST
      working-directory: ${{github.workspace}}/build
      # Running tests using the package called gtest, which we imported using conan
      run: GTEST_COLOR=1 ctest --verbose

